{"EDITOR_STATE":{"allProjectFiles":{"c9c59c2a-4da6-4b85-bcb1-ca5796177fec":{"id":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","parent":null,"name":"TestForm","type":"DIRECTORY","isDirectory":true,"children":["69e7fbaa-c9b8-4ed5-93f1-0f5a0fa598f0","3ca095b4-1c17-489e-a021-54b7451008f8","3cbab48b-aea9-4b7c-be39-f1235318a296","304798d3-3554-49dd-a8b8-b786997b793e"],"isRemovable":false,"filePath":"TestForm"},"69e7fbaa-c9b8-4ed5-93f1-0f5a0fa598f0":{"id":"69e7fbaa-c9b8-4ed5-93f1-0f5a0fa598f0","parent":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestForm/lambda.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nconst ddb = new AWS.DynamoDB.DocumentClient();\nexports.handler = function (event, context, callback) {\n\tlet email = event.email\n\tlet username = event.name;\n\tlet phone = event.phone;\n\tlet address = event.address;\n\tlet encodedImage = event.user_avatar;\n\tlet decodedImage = Buffer.from(encodedImage, 'base64');\n\tvar filePath = \"avatars/\" + username + \".jpg\"\n\n\n\tddb.put({\n\t\tTableName: 'userDetails',\n\t\tItem: {\n\t\t\t'username': username,\n\t\t\t'email': email,\n\t\t\t'address': address,\n\t\t\t'phone': phone,\n\t\t\t'photo': filePath\n\t\t}\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\tconsole.log(\"Details coould not be entered\");\n\t\t} else {\n\t\t\t//your logic goes here\n\t\t\tconsole.log(data)\n\t\t\tconsole.log(\"Details entered succesfully\");\n\t\t}\n\t});\n\ts3.putObject({\n\t\t\"Body\": decodedImage,\n\t\t\"Bucket\": \"userdetail.s3.bucket\",\n\t\t\"Key\": filePath\n\t})\n\t\t.promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t\tETag: \"\\\\\"6805f2cfc46c0f04559748bb039d69ae\\\\\"\", \n\t\t\t\tVersionId: \"pSKidl4pHBiNwukdbcPXAIs.sshFFOc0\"\n\t\t\t}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast1userDetailspostany","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"version":1,"syncVersion":120},"3ca095b4-1c17-489e-a021-54b7451008f8":{"id":"3ca095b4-1c17-489e-a021-54b7451008f8","parent":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","name":"getUser.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestForm/getUser.js","code":"let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nconst ddb = new AWS.DynamoDB.DocumentClient();\nexports.handler = function (event, context, callback) {\n\n\tlet filePath = event.queryStringParameters.filePath;\n\tlet email = event.queryStringParameters.email;\n\tlet image = event.queryStringParameters.image;\n\t// let response = {\n\t// \tbody: \"\",\n\t// \tstatusCode: 200,\n\t// \tisBase64Encoded: false\n\t// }\n\n\n\t// ddb.scan({\n\t// \tTableName: 'userDetails',\n\t// \tExpressionAttributeValues: {\n\t// \t\t':email': email\n\t// \t},\n\t// \tFilterExpression: 'email = :email'\n\t// }, function (err, data) {\n\t// \tif (err) {\n\t// \t\t//handle error\n\t// \t\tconsole.log(\"data\");\n\t// \t\tresponse.body = JSON.stringify(err);\n\t// \t\tcallback(response, null);\n\t// \t} else {\n\t// \t\tconsole.log(\"Success\");\n\t// \t\tresponse.body = JSON.stringify(data);\n\t// \t\t// callback(null, response);\n\t// \t\t//your logic goes here\n\t// \t}\n\n\t// });\n\t// s3.getObject({\n\t// \t'Bucket': \"userdetail.s3.bucket\",\n\t// \t'Key': filePath\n\t// }).promise()\n\t// \t.then(data => {\n\t// \t\tconsole.log(data);           // successful response\n\t// \t\t/*\n\t// \t\tdata = {\n\t// \t\t\tAcceptRanges: \"bytes\", \n\t// \t\t\tContentLength: 3191, \n\t// \t\t\tContentType: \"image/jpeg\", \n\t// \t\t\tETag: \"\\\\\"6805f2cfc46c0f04559748bb039d69ae\\\\\"\", \n\t// \t\t\tLastModified: <Date Representation>, \n\t// \t\t\tMetadata: {...}, \n\t// \t\t\tTagCount: 2, \n\t// \t\t\tVersionId: \"null\"\n\t// \t\t}\n\t// \t\t*/\n\n\t// \t\tresponse.body = JSON.stringify(data);\n\t// \t\t// callback(null, response);\n\n\t// \t})\n\t// \t.catch(err => {\n\t// \t\tresponse.body = JSON.stringify(err);\n\t// \t\tconsole.log(err, err.stack); // an error occurred\n\t// \t\t// callback(response, null);\n\t// \t});\n\n\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast1userDetailsviewget","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"version":127,"syncVersion":309},"3cbab48b-aea9-4b7c-be39-f1235318a296":{"id":"3cbab48b-aea9-4b7c-be39-f1235318a296","parent":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","name":"form.html","type":"HTML_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestForm/form.html","code":"<!DOCTYPE html>\n<html>\n<head>\n    <title>form</title>\n</head>\n<body>\n    <h1>User Detail Form</h1>\n    <form>\n        <input type=\"text\" name=\"username\" value=\"\">\n        <input type=\"email\" name=\"email\" value=\"\">\n        <input type=\"text\" name=\"address\" value=\"\">\n    </form>\n\n</body>\n</html>","version":146,"syncVersion":146},"304798d3-3554-49dd-a8b8-b786997b793e":{"id":"304798d3-3554-49dd-a8b8-b786997b793e","parent":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","name":"deleteUser.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"TestForm/deleteUser.js","code":"let AWS = require('aws-sdk');\nconst ddb = new AWS.DynamoDB.DocumentClient();\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\tddb.delete({\n\t\tTableName: 'userDetails',\n\t\tKey: { 'email': email }\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\t//handle error\n\t\t\tconsole.log(\"Error occured in deleting the query\");\n\t\t} else {\n\t\t\t//your logic goes here\n\t\t\tconsole.log(\"Succeed in deletion\");\n\t\t}\n\t});\n\tlet name = event.name;\n\n\tconsole.log(name);\n\ts3.deleteObject({\n\t\t'Bucket': \"userdetail.s3.bucket\",\n\t\t'Key': name\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\tconsole.log(\"Successfully deleted\");\n\t\t\t/*\n\t\t\t\tdata = {}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\tcallback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast1userDetailsdeletedelete","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"version":191,"syncVersion":71}},"rootNode":"c9c59c2a-4da6-4b85-bcb1-ca5796177fec","openFiles":["69e7fbaa-c9b8-4ed5-93f1-0f5a0fa598f0","3ca095b4-1c17-489e-a021-54b7451008f8","304798d3-3554-49dd-a8b8-b786997b793e"],"currentFileId":"304798d3-3554-49dd-a8b8-b786997b793e","resources":{"apigusEast1userDetailspostany":{"name":"apigusEast1userDetailspostany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"userDetails","endpointType":"EDGE","resourceMode":0,"resourceName":"post","resourcePath":"/post","restMethod":"ANY","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"PROD"},"globallyEditable":true},"ddbuserDetails":{"name":"ddbuserDetails","type":"DynamoDB","config":{"mode":0,"operation":"delete","table":{"arn":"","name":"userDetails","partitionKey":"email","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0,"primaryKeyType":"S"},"parameters":{"Key":{"email":"@{email}"},"Item":{},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false},"apigusEast1userDetailsviewget":{"name":"apigusEast1userDetailsviewget","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"userDetails","endpointType":"EDGE","resourceMode":0,"resourceName":"view","resourcePath":"/view","restMethod":"GET","proxyIntegration":true,"enableCORS":true,"stageMode":0,"stageName":"PROD"},"globallyEditable":true},"s3userdetails3bucket":{"name":"s3userdetails3bucket","type":"S3","config":{"mode":0,"bucket":{"region":"us-east-1","name":"userdetail.s3.bucket"}},"globallyEditable":false},"apigusEast1userDetailsdeletedelete":{"name":"apigusEast1userDetailsdeletedelete","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"userDetails","apiId":"z5dr8x3nl1","endpointType":"EDGE","rootResourceId":"g1h3p81oii","existingResources":{"/post":"4nnn39","/":"g1h3p81oii","/view":"zy2ker"},"resourceMode":0,"resourceName":"delete","resourcePath":"/delete","restMethod":"DELETE","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":"","editable":false,"isEditable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true}}},"lambdaId":"69e7fbaa-c9b8-4ed5-93f1-0f5a0fa598f0","additionalFiles":[]},"PROJECT_META":{"projectName":"TestForm","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"TestForm","repoUrl":"https://github.com/TestAndunR/TestForm","lastSave":1525338273977}}